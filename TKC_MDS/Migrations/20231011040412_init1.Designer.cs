// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TKC_MDS.Data;

#nullable disable

namespace TKC_MDS.Migrations
{
    [DbContext(typeof(MSD_Context))]
    [Migration("20231011040412_init1")]
    partial class init1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TKC_MDS.Data.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("TKC_MDS.Data.Roles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("TKC_MDS.Models.AdjustOrderRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AdjustOrderRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d089be95-b30d-448e-aa3c-7147e2b36288"),
                            Description = "View",
                            Name = "ViewAdjustOrder",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9220)
                        },
                        new
                        {
                            Id = new Guid("28e5e6e9-2255-46be-866c-4bb7c415712d"),
                            Description = "Create",
                            Name = "CreateAdjustOrder",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9223)
                        },
                        new
                        {
                            Id = new Guid("6ae14385-6d5e-477d-9a3d-0868a5b6d6a9"),
                            Description = "Edit",
                            Name = "EditAdjustOrder",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9224)
                        },
                        new
                        {
                            Id = new Guid("fe19f898-0bf5-468b-ad1a-77800a44031c"),
                            Description = "Delete",
                            Name = "DeleteAdjustOrder",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9241)
                        });
                });

            modelBuilder.Entity("TKC_MDS.Models.ClaimRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("AccessRolesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAllow")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ClaimRoles");
                });

            modelBuilder.Entity("TKC_MDS.Models.DataTypeRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DataTypeRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5252a234-86a6-4355-9ed4-e97cf2a54d55"),
                            Description = "View",
                            Name = "ViewDataType",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9261)
                        },
                        new
                        {
                            Id = new Guid("dbce2672-28d2-45fe-949e-222aa1a1076f"),
                            Description = "Create",
                            Name = "CreateDataType",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9264)
                        },
                        new
                        {
                            Id = new Guid("80b685e6-0f9f-46de-9f09-84b8d36eb192"),
                            Description = "Edit",
                            Name = "EditDataType",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9265)
                        },
                        new
                        {
                            Id = new Guid("e653ac09-6c1d-4481-8107-b7bec77b5381"),
                            Description = "Delete",
                            Name = "DeleteDataType",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9266)
                        });
                });

            modelBuilder.Entity("TKC_MDS.Models.ManageUserRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ManageUserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("98dc19a5-0f89-471b-ab61-5a94fc8d3a0a"),
                            Description = "View",
                            Name = "ViewUser",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9348)
                        },
                        new
                        {
                            Id = new Guid("ca234b81-66d2-403e-ab06-ec17dd2fdfaa"),
                            Description = "Create",
                            Name = "CreateUser",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9351)
                        },
                        new
                        {
                            Id = new Guid("834c78e5-6900-487c-b9dc-3eae2c6363b2"),
                            Description = "Edit",
                            Name = "EditUser",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9352)
                        },
                        new
                        {
                            Id = new Guid("dea5bdd8-97fc-4f12-b191-86abf57e5932"),
                            Description = "Delete",
                            Name = "DeleteUser",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9353)
                        });
                });

            modelBuilder.Entity("TKC_MDS.Models.ReportRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ReportRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aedabfc0-58ca-4352-93e8-f68d6f82f1ef"),
                            Description = "View",
                            Name = "ViewReport",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9290)
                        },
                        new
                        {
                            Id = new Guid("4ad47ffb-f76b-4a04-b57b-2b745650d732"),
                            Description = "Create",
                            Name = "CreateReport",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9293)
                        },
                        new
                        {
                            Id = new Guid("4d30c0e3-ad15-41ff-a73f-5e8b9cd7201e"),
                            Description = "Edit",
                            Name = "EditReport",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9294)
                        },
                        new
                        {
                            Id = new Guid("34b17aa5-3cb7-4f0e-87b2-4e2368f6cb3a"),
                            Description = "Delete",
                            Name = "DeleteReport",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9298)
                        });
                });

            modelBuilder.Entity("TKC_MDS.Models.SaveOrderRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SaveOrderRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("356c6def-2268-47cd-886e-240d68a7f845"),
                            Description = "View",
                            Name = "ViewOrder",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9144)
                        },
                        new
                        {
                            Id = new Guid("b0454708-070b-41c6-a773-56249b4a8867"),
                            Description = "Create",
                            Name = "CreateOrder",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9151)
                        },
                        new
                        {
                            Id = new Guid("31472819-1529-4c98-a745-89a39473d164"),
                            Description = "Edit",
                            Name = "EditOrder",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9152)
                        },
                        new
                        {
                            Id = new Guid("eb6cdcfe-21eb-4fd3-99c8-d3049f1aad09"),
                            Description = "Delete",
                            Name = "DeleteOrder",
                            UpdateDate = new DateTime(2023, 10, 11, 4, 4, 12, 464, DateTimeKind.Utc).AddTicks(9153)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("TKC_MDS.Data.Roles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TKC_MDS.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TKC_MDS.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("TKC_MDS.Data.Roles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TKC_MDS.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TKC_MDS.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
