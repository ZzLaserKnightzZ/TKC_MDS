// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TKC_MDS.Data;

#nullable disable

namespace TKC_MDS.Migrations
{
    [DbContext(typeof(MSD_Context))]
    partial class MSD_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TKC_MDS.Data.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("TKC_MDS.Data.Roles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("TKC_MDS.Models.AdjustOrderRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AdjustOrderRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("720c2579-c33b-4112-85c4-bcc5e1f0ab87"),
                            Description = "View",
                            Name = "ViewAdjustOrder",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3696)
                        },
                        new
                        {
                            Id = new Guid("36d45827-65b2-42cd-9be7-6f6475199a1f"),
                            Description = "Create",
                            Name = "CreateAdjustOrder",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3700)
                        },
                        new
                        {
                            Id = new Guid("7ba630a8-7fc7-4c8d-878a-a07ef1ef74fe"),
                            Description = "Edit",
                            Name = "EditAdjustOrder",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3701)
                        },
                        new
                        {
                            Id = new Guid("01888449-b0fb-4688-b3fc-f561e0c0b6a6"),
                            Description = "Delete",
                            Name = "DeleteAdjustOrder",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3702)
                        });
                });

            modelBuilder.Entity("TKC_MDS.Models.ClaimRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("AccessRolesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAllow")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClaimRoles");
                });

            modelBuilder.Entity("TKC_MDS.Models.DataTypeRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DataTypeRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("df92b7fd-c074-4a38-b9b4-cd885ac20651"),
                            Description = "View",
                            Name = "ViewDataType",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3722)
                        },
                        new
                        {
                            Id = new Guid("1240fa61-839c-42a5-a3d4-a1c510e86c41"),
                            Description = "Create",
                            Name = "CreateDataType",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3725)
                        },
                        new
                        {
                            Id = new Guid("63a57b84-a0d8-4055-8b2f-e9cfd4760bdb"),
                            Description = "Edit",
                            Name = "EditDataType",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3726)
                        },
                        new
                        {
                            Id = new Guid("ff829346-6424-4d0b-928e-8d9c60a8abdc"),
                            Description = "Delete",
                            Name = "DeleteDataType",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3727)
                        });
                });

            modelBuilder.Entity("TKC_MDS.Models.ManageUserRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ManageUserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ecc9436-fe70-4f2c-814e-f755b1910588"),
                            Description = "View",
                            Name = "ViewUser",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3763)
                        },
                        new
                        {
                            Id = new Guid("8729a742-c1e9-457e-91bf-8463291f10c5"),
                            Description = "Create",
                            Name = "CreateUser",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3769)
                        },
                        new
                        {
                            Id = new Guid("f568b7d0-d039-4d95-a9c8-63f99ac396e5"),
                            Description = "Edit",
                            Name = "EditUser",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3770)
                        },
                        new
                        {
                            Id = new Guid("8e45ada1-17c4-4139-bb0d-e410a8867f6b"),
                            Description = "Delete",
                            Name = "DeleteUser",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3771)
                        });
                });

            modelBuilder.Entity("TKC_MDS.Models.ReportRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ReportRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4bb918ae-0769-4a48-89e8-c6cc855f462b"),
                            Description = "View",
                            Name = "ViewReport",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3743)
                        },
                        new
                        {
                            Id = new Guid("da7dde0a-fb29-47a4-bd77-42c775448aa9"),
                            Description = "Create",
                            Name = "CreateReport",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3746)
                        },
                        new
                        {
                            Id = new Guid("e677b707-dfa1-4d8c-b4df-e8ddf5bdb1cd"),
                            Description = "Edit",
                            Name = "EditReport",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3747)
                        },
                        new
                        {
                            Id = new Guid("ce18635f-def9-444f-8fde-ee6cfe01c0c3"),
                            Description = "Delete",
                            Name = "DeleteReport",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3748)
                        });
                });

            modelBuilder.Entity("TKC_MDS.Models.SaveOrderRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SaveOrderRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6c9fc2f8-f79a-473b-b030-ee41a2eab728"),
                            Description = "View",
                            Name = "ViewOrder",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3618)
                        },
                        new
                        {
                            Id = new Guid("dc488437-652c-4755-bc33-7a3f00e71d57"),
                            Description = "Create",
                            Name = "CreateOrder",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3622)
                        },
                        new
                        {
                            Id = new Guid("4719b151-04ad-40a9-8a42-b68caf7c1052"),
                            Description = "Edit",
                            Name = "EditOrder",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3646)
                        },
                        new
                        {
                            Id = new Guid("dd6892be-adaa-4b7a-9db8-033bcd0e8e5e"),
                            Description = "Delete",
                            Name = "DeleteOrder",
                            UpdateDate = new DateTime(2023, 10, 13, 13, 1, 22, 300, DateTimeKind.Utc).AddTicks(3647)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("TKC_MDS.Data.Roles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TKC_MDS.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TKC_MDS.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("TKC_MDS.Data.Roles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TKC_MDS.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TKC_MDS.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
